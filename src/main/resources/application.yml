server:
  port: 7777
  forward-headers-strategy: framework
  servlet:
    context-path: /iam

spring:
  base_url: /api/v1/
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_host:DBurl:5432}/auth-dev
    username: ${DB_username:dev}
    password: ${DB_password:administrator}
    hikari:
      pool-name: Hikari
      connection-timeout: 30000
      idle-timeout: 600000
      maximum-pool-size: 2
      minimum-idle: 1
      max-lifetime: 1000
  # JPA properties
  jpa:
    hibernate:
      ddl-auto:   update #create # update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
  sql:
    init:
      mode: always
  main:
    allow-bean-definition-overriding: true
  mvc:
    format:
      date: MM-dd-yyyy
      date-time: MM-dd-yyyy HH:mm:ss

  mail:
    host: email-smtp.ap-south-1.amazonaws.com
    username: YOUR_USER_NAME
    password: YOUR_PASSWORD
    port: 587
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          port: 587
          auth: true
          starttls:
            enable: true
            required: true
      sender: xx@xyz.com
#  jackson:
#    date-format: "MM-dd-yyyy HH:mm:ss"
#    time-zone: "GMT+8
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: ${keycloak.serverUrl}/auth/realms/hygai/protocol/openid-connect/certs

# api docs config
springdoc:
  version: v1
  api-docs:
    path: /api-docs
  swagger-ui:
    operationsSorter: method
    disable-swagger-default-url: false
# for heath checking
management:
  endpoint:
    health:
      show-details: always

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
  hystrix:
    enabled: true


cloud:
  aws:
    region:
      static: us-east-1
      auto: false
    credentials:
      access-key: YOUR_ACCESS_KEY
      secret-key: YOUR_SECRET_KEY
    topic_arn: "arn"

twilio:
  service_id: xxxxxxx-xx--x
  account_id: xxxxxxxx-xx-xx
  auth_token: xxxx-x--x--x-x-x
  SendUrl: https://verify.twilio.com/v2/Services/${twilio.service_id}/Verifications
  checkUrl: https://verify.twilio.com/v2/Services/${twilio.service_id}/VerificationCheck

kcloak:
  enabled: true
  auth-server-url: SERVER_URL/auth
  config:
    resolver: path
    userName: admin
    password: admin
    resteasy_pool_size: 10
    token: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/token
    routes:
      token: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/token
      logout: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/logout
      authorization_code: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/auth
      user_info: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/userinfo
      changePassword: ${kcloak.auth-server-url}/admin/realms/####/users/openid-connect/userinfo
      resetPassword: ${kcloak.auth-server-url}/admin/realms/####/users/
      cert: ${kcloak.auth-server-url}/realms/####/protocol/openid-connect/certs
      

http_source:
  cert-path: "dfsf"
  cert-pass: "ddfsdf"

mail_service:
  url: SERVER_URL
